
	import javax.swing.JOptionPane;

public class DiceGameProgramWeek_11_HW {

	public static void main(String[] args) {


		int tries = 0;
	int computerNum;
	int[] userWins = new int[100];
	int[] compWins = new int[100];
	int[] userChoice = new int[100];
	int[] compChoice = new int[100];
	int choice = 1;
	int scorecard;
	int bounces = (int) (Math.random() * (100) + 1);
	int playersWinsForCalculation = 0;

	
	Dice_Class_Week_11_Labs myDice = new Dice_Class_Week_11_Labs(bounces); 
	trippleDiceWithHistory_week_11_HW original = new trippleDiceWithHistory_week_11_HW();

	
	while (choice == 1) {

	computerNum = myDice.Throw();

	int dices = myDice.promptNumberOfDiceToThrow();
	Dice_Class_Week_11_Labs.Throw(dices, bounces);
	Dice_Class_Week_11_Labs.OneThrow();
	int guess = myDice.promptUser();

	userChoice[tries] = guess;
	compChoice[tries] = computerNum;
	JOptionPane.showMessageDialog(null, "The number is " + computerNum);
	JOptionPane.showMessageDialog(null,
	"The final number is " + myDice.Value());


	if (guess != computerNum) {

	myDice.wrongGuess(); 

	userWins[tries] = 0;
	compWins[tries] = 1;

	}

	else if (guess == computerNum) {

	myDice.rightGuess(); 

	userWins[tries] = 1;
	compWins[tries] = 0;	playersWinsForCalculation++;
	}
	else {
	myDice.errorMessage();
	continue;
}

	choice = myDice.playAgainPrompt();

if (tries % 2 == 0) {
	scorecard = myDice.promptHistoryAndResults();

	if (scorecard == 1) {

	myDice.setGameBoardInitial();


	myDice.keepTrackHistory(userWins, compWins, tries, userChoice, compChoice);
	myDice.promptUserGuessAndComputerNumber();

	myDice.playerWinPercentage(playersWinsForCalculation, tries);


	original.Throw();

	JOptionPane.showMessageDialog(null, "Checking to see if the number of throws equal to the value per throw"
	+ "(true = yes, false = no). ");
	original.areEqual();	original.areNotEqual();
	
	}
	scorecard = 1;

	}
	}
	tries++;
	
}
}
